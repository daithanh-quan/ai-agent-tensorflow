import type { Metadata } from "next";
import localFont from "next/font/local";

import "../globals.css";

import React from "react";

import { hasLocale, NextIntlClientProvider } from "next-intl";
import { setRequestLocale } from "next-intl/server";
import { notFound } from "next/navigation";

import { Toaster } from "src/components/ui/sonner";
import { routing } from "src/i18n/routing";
import Providers from "src/providers/queryClientProvider";

const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider>
          <Providers>{children}</Providers>
        </NextIntlClientProvider>
        <Toaster
          toastOptions={{
            classNames: {
              error: "text-red-600 bg-white border-none",
              success: "text-green-400 bg-white border-none",
              warning: "text-yellow-400 bg-white border-none",
              info: "text-blue-400 bg-white border-none",
            },
          }}
        />
      </body>
    </html>
  );
}
